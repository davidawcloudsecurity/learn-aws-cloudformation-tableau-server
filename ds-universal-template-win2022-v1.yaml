AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to install tableau server in AWS EC2 Windows'

Parameters:
  # EC2 Parameters
  InstanceName:
    Type: String
    Description: Name tag for the EC2 instance
    Default: 'tableau-server'

  InstanceType:
    Type: String
    Description: EC2 instance type for Tableau Server
    Default: r5.4xlarge
    AllowedValues:
      - r5.4xlarge
      - r5.8xlarge
      - r6i.4xlarge
      - c5.9xlarge

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of existing EC2 KeyPair for SSH access

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select a Subnet

  VolumeSizeGB:
    Type: Number
    Description: Size of root volume in GB
    Default: 100
    MinValue: 50
    MaxValue: 500

Parameters:
  BucketName:
    Type: String
    Description: 'Name for the S3 bucket (must be globally unique)'
  EnableVersioning:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Enable versioning for the bucket'
  
Resources:
  MyS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: !If [EnableVersioning, 'Enabled', 'Suspended']
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref MyS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AllowGetAndPutObject'
            Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 
              - 's3:GetObject'
              - 's3:PutObject'
            Resource: !Join ['', [!GetAtt MyS3Bucket.Arn, '/*']]

Outputs:
  BucketName:
    Description: 'Name of the created S3 bucket'
    Value: !Ref MyS3Bucket
  BucketARN:
    Description: 'ARN of the created S3 bucket'
    Value: !GetAtt MyS3Bucket.Arn
